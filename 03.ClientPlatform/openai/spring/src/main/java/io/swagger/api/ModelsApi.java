/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.35).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.DeleteModelResponse;
import io.swagger.model.ListModelsResponse;
import io.swagger.model.Model;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2024-05-31T08:43:25.403038835+09:00[Asia/Tokyo]")
@Validated
public interface ModelsApi {

    @Operation(summary = "Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.", description = "", security = {
        @SecurityRequirement(name = "ApiKeyAuth")    }, tags={ "Models" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = DeleteModelResponse.class))) })
    @RequestMapping(value = "/models/{model}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<DeleteModelResponse> deleteModel(@Parameter(in = ParameterIn.PATH, description = "The model to delete", required=true, schema=@Schema()) @PathVariable("model") String model);


    @Operation(summary = "Lists the currently available models, and provides basic information about each one such as the owner and availability.", description = "", security = {
        @SecurityRequirement(name = "ApiKeyAuth")    }, tags={ "Models" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ListModelsResponse.class))) })
    @RequestMapping(value = "/models",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ListModelsResponse> listModels();


    @Operation(summary = "Retrieves a model instance, providing basic information about the model such as the owner and permissioning.", description = "", security = {
        @SecurityRequirement(name = "ApiKeyAuth")    }, tags={ "Models" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Model.class))) })
    @RequestMapping(value = "/models/{model}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Model> retrieveModel(@Parameter(in = ParameterIn.PATH, description = "The ID of the model to use for this request", required=true, schema=@Schema()) @PathVariable("model") String model);

}

