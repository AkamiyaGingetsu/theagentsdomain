/**
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { BatchErrors } from './batchErrors';
import { BatchRequestCounts } from './batchRequestCounts';

export interface Batch { 
    id: string;
    /**
     * The object type, which is always `batch`.
     */
    object: Batch.ObjectEnum;
    /**
     * The OpenAI API endpoint used by the batch.
     */
    endpoint: string;
    errors?: BatchErrors;
    /**
     * The ID of the input file for the batch.
     */
    inputFileId: string;
    /**
     * The time frame within which the batch should be processed.
     */
    completionWindow: string;
    /**
     * The current status of the batch.
     */
    status: Batch.StatusEnum;
    /**
     * The ID of the file containing the outputs of successfully executed requests.
     */
    outputFileId?: string;
    /**
     * The ID of the file containing the outputs of requests with errors.
     */
    errorFileId?: string;
    /**
     * The Unix timestamp (in seconds) for when the batch was created.
     */
    createdAt: number;
    /**
     * The Unix timestamp (in seconds) for when the batch started processing.
     */
    inProgressAt?: number;
    /**
     * The Unix timestamp (in seconds) for when the batch will expire.
     */
    expiresAt?: number;
    /**
     * The Unix timestamp (in seconds) for when the batch started finalizing.
     */
    finalizingAt?: number;
    /**
     * The Unix timestamp (in seconds) for when the batch was completed.
     */
    completedAt?: number;
    /**
     * The Unix timestamp (in seconds) for when the batch failed.
     */
    failedAt?: number;
    /**
     * The Unix timestamp (in seconds) for when the batch expired.
     */
    expiredAt?: number;
    /**
     * The Unix timestamp (in seconds) for when the batch started cancelling.
     */
    cancellingAt?: number;
    /**
     * The Unix timestamp (in seconds) for when the batch was cancelled.
     */
    cancelledAt?: number;
    requestCounts?: BatchRequestCounts;
    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
     */
    metadata?: any;
}
export namespace Batch {
    export type ObjectEnum = 'batch';
    export const ObjectEnum = {
        Batch: 'batch' as ObjectEnum
    };
    export type StatusEnum = 'validating' | 'failed' | 'in_progress' | 'finalizing' | 'completed' | 'expired' | 'cancelling' | 'cancelled';
    export const StatusEnum = {
        Validating: 'validating' as StatusEnum,
        Failed: 'failed' as StatusEnum,
        InProgress: 'in_progress' as StatusEnum,
        Finalizing: 'finalizing' as StatusEnum,
        Completed: 'completed' as StatusEnum,
        Expired: 'expired' as StatusEnum,
        Cancelling: 'cancelling' as StatusEnum,
        Cancelled: 'cancelled' as StatusEnum
    };
}