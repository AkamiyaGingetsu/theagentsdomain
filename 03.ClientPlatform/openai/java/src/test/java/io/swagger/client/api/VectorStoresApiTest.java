/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CreateVectorStoreFileBatchRequest;
import io.swagger.client.model.CreateVectorStoreFileRequest;
import io.swagger.client.model.CreateVectorStoreRequest;
import io.swagger.client.model.DeleteVectorStoreFileResponse;
import io.swagger.client.model.DeleteVectorStoreResponse;
import io.swagger.client.model.ListVectorStoreFilesResponse;
import io.swagger.client.model.ListVectorStoresResponse;
import io.swagger.client.model.UpdateVectorStoreRequest;
import io.swagger.client.model.VectorStoreFileBatchObject;
import io.swagger.client.model.VectorStoreFileObject;
import io.swagger.client.model.VectorStoreObject;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for VectorStoresApi
 */
@Ignore
public class VectorStoresApiTest {

    private final VectorStoresApi api = new VectorStoresApi();

    /**
     * Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void cancelVectorStoreFileBatchTest() throws Exception {
        String vectorStoreId = null;
        String batchId = null;
        VectorStoreFileBatchObject response = api.cancelVectorStoreFileBatch(vectorStoreId, batchId);

        // TODO: test validations
    }
    /**
     * Create a vector store.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createVectorStoreTest() throws Exception {
        CreateVectorStoreRequest body = null;
        VectorStoreObject response = api.createVectorStore(body);

        // TODO: test validations
    }
    /**
     * Create a vector store file by attaching a [File](/docs/api-reference/files) to a [vector store](/docs/api-reference/vector-stores/object).
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createVectorStoreFileTest() throws Exception {
        CreateVectorStoreFileRequest body = null;
        String vectorStoreId = null;
        VectorStoreFileObject response = api.createVectorStoreFile(body, vectorStoreId);

        // TODO: test validations
    }
    /**
     * Create a vector store file batch.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createVectorStoreFileBatchTest() throws Exception {
        CreateVectorStoreFileBatchRequest body = null;
        String vectorStoreId = null;
        VectorStoreFileBatchObject response = api.createVectorStoreFileBatch(body, vectorStoreId);

        // TODO: test validations
    }
    /**
     * Delete a vector store.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteVectorStoreTest() throws Exception {
        String vectorStoreId = null;
        DeleteVectorStoreResponse response = api.deleteVectorStore(vectorStoreId);

        // TODO: test validations
    }
    /**
     * Delete a vector store file. This will remove the file from the vector store but the file itself will not be deleted. To delete the file, use the [delete file](/docs/api-reference/files/delete) endpoint.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteVectorStoreFileTest() throws Exception {
        String vectorStoreId = null;
        String fileId = null;
        DeleteVectorStoreFileResponse response = api.deleteVectorStoreFile(vectorStoreId, fileId);

        // TODO: test validations
    }
    /**
     * Retrieves a vector store.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVectorStoreTest() throws Exception {
        String vectorStoreId = null;
        VectorStoreObject response = api.getVectorStore(vectorStoreId);

        // TODO: test validations
    }
    /**
     * Retrieves a vector store file.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVectorStoreFileTest() throws Exception {
        String vectorStoreId = null;
        String fileId = null;
        VectorStoreFileObject response = api.getVectorStoreFile(vectorStoreId, fileId);

        // TODO: test validations
    }
    /**
     * Retrieves a vector store file batch.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVectorStoreFileBatchTest() throws Exception {
        String vectorStoreId = null;
        String batchId = null;
        VectorStoreFileBatchObject response = api.getVectorStoreFileBatch(vectorStoreId, batchId);

        // TODO: test validations
    }
    /**
     * Returns a list of vector store files in a batch.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listFilesInVectorStoreBatchTest() throws Exception {
        String vectorStoreId = null;
        String batchId = null;
        Integer limit = null;
        String order = null;
        String after = null;
        String before = null;
        String filter = null;
        ListVectorStoreFilesResponse response = api.listFilesInVectorStoreBatch(vectorStoreId, batchId, limit, order, after, before, filter);

        // TODO: test validations
    }
    /**
     * Returns a list of vector store files.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listVectorStoreFilesTest() throws Exception {
        String vectorStoreId = null;
        Integer limit = null;
        String order = null;
        String after = null;
        String before = null;
        String filter = null;
        ListVectorStoreFilesResponse response = api.listVectorStoreFiles(vectorStoreId, limit, order, after, before, filter);

        // TODO: test validations
    }
    /**
     * Returns a list of vector stores.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listVectorStoresTest() throws Exception {
        Integer limit = null;
        String order = null;
        String after = null;
        String before = null;
        ListVectorStoresResponse response = api.listVectorStores(limit, order, after, before);

        // TODO: test validations
    }
    /**
     * Modifies a vector store.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void modifyVectorStoreTest() throws Exception {
        UpdateVectorStoreRequest body = null;
        String vectorStoreId = null;
        VectorStoreObject response = api.modifyVectorStore(body, vectorStoreId);

        // TODO: test validations
    }
}
